name: rust-ci

on:
    push:
        branches:
            - main
            - staging
            - trying

env:
    CARGO_TERM_COLOR: always

jobs:
    build:
        strategy:
            matrix:
                os: [windows-latest, ubuntu-latest, macos-latest]
                toolchain: [nightly]
                mode: [release, debug]
        name: cargo-build ${{ matrix.os }}-${{ matrix.toolchain}} ${{ matrix.mode }}
        runs-on: ${{ matrix.os }}
        steps:
            - uses: actions/checkout@v2

            - name: set compile mode
              shell: bash
              run: |
                  if [ ${{matrix.mode}} = "release" ] ; then
                    echo "MODE=--release" >> $GITHUB_ENV
                  fi
            - uses: actions-rs/toolchain@v1
              with:
                  profile: minimal
                  toolchain: ${{ matrix.toolchain }}
                  override: true
            - uses: actions-rs/cargo@v1
              with:
                  command: build
                  args: ${{ env.MODE }} --verbose
    doc:
      strategy:
        matrix:
          os: [windows-latest, ubuntu-latest, macos-latest]
          toolchain: [nightly]
          mode: [release, debug]
      name: cargo-doc ${{ matrix.os }}-${{ matrix.toolchain }} ${{ matrix.mode }}
      runs-on: ${{ matrix.os }}
      steps:
        - uses: actions/checkout@v2
        
        - name: set compile mode
          shell: bash
          run: |
                  if [ ${{ matrix.mode }} = "release" ] ; then
                    echo "MODE=--release" >> $GITHUB_ENV
                  fi
        - uses: actions-rs/toolchain@v1
          with:
            profile: minimal
            toolchain: ${{ matrix.toolchain }}
            override: true
        - uses: actions-rs/cargo@v1
          with:
            command: doc
            args: ${{ env.MODE }} --verbose
    test:
        strategy:
            matrix:
                os: [windows-latest, ubuntu-latest, macos-latest]
                toolchain: [nightly]
                mode: [release, debug]
        name: cargo-test ${{ matrix.os }}-${{ matrix.toolchain}}
        runs-on: ${{ matrix.os }}
        steps:
            - uses: actions/checkout@v2

            - uses: actions-rs/toolchain@v1
              with:
                  profile: minimal
                  toolchain: ${{ matrix.toolchain }}
                  override: true

            - uses: actions-rs/cargo@v1
              with:
                  command: test
                  args: ${{ env.MODE }} --verbose
    # cargo-fmt is platform independent, so no matrix is needed
    fmt:
        name: cargo-fmt
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2

            - uses: actions-rs/toolchain@v1
              with:
                  profile: minimal
                  toolchain: nightly
                  override: true
                  components: rustfmt

            - uses: actions-rs/cargo@v1
              with:
                  command: fmt
                  args: --all --verbose -- --check
    clippy:
        strategy:
          matrix:
            os: [ubuntu-latest, windows-latest, macos-latest]
            toolchain: [nightly]
            mode: [release, debug]
        name: cargo-clippy
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2

            - name: set compile mode
              shell: bash
              run: |
                  if [ ${{matrix.mode}} = "release" ] ; then
                    echo "MODE=--release" >> $GITHUB_ENV
                  fi
            - uses: actions-rs/toolchain@v1
              with:
                  profile: minimal
                  toolchain: nightly
                  components: clippy
                  override: true
            - uses: actions-rs/clippy-check@v1
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  args: ${{ env.MODE }} --verbose
